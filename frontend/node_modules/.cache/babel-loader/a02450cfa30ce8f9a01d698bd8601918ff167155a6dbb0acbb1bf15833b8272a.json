{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  let [text, setText] = useState();\n  let [error, setError] = useState(null);\n  let [convertFormat, setConvertFormat] = useState(\"mp3\");\n  const convertYT = async event => {\n    console.log(event.target);\n    try {\n      const response = await fetch('http://localhost:3001/test', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          url: text\n        })\n      });\n      const data = await response.json();\n    } catch (error) {\n      setError(error);\n    }\n    ;\n  };\n  const formatButtons = [\"mp3\", \"mp4\"].map(format => {\n    return /*#__PURE__*/_jsxDEV(FormatButton, {\n      onClick: () => {\n        setConvertFormat(format);\n      },\n      format: format,\n      active: convertFormat == format\n    }, format, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(YoutubeDLContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      // onChange={\n      //     (e)=>{\n      //         setText(e.target.value);\n      //     }\n      // } \n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormatContainer, {\n      children: formatButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeDL, \"G5JdtGcwjqTWaTk7fWZqf/SQ3Lc=\");\n_c = YoutubeDL;\nfunction FormatButton({\n  onClick,\n  format,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledFormatButton, {\n    $active: active,\n    onClick: onClick,\n    children: format\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FormatButton;\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    input {\n        \n    }\n`;\n_c3 = YoutubeDLContainer;\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`;\n_c4 = FormatContainer;\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active ? \"red\" : \"white\"};\n\n`;\n_c5 = StyledFormatButton;\nexport default YoutubeDL;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"YoutubeDL\");\n$RefreshReg$(_c2, \"FormatButton\");\n$RefreshReg$(_c3, \"YoutubeDLContainer\");\n$RefreshReg$(_c4, \"FormatContainer\");\n$RefreshReg$(_c5, \"StyledFormatButton\");","map":{"version":3,"names":["useRef","useState","styled","jsxDEV","_jsxDEV","axios","require","YoutubeDL","_s","text","setText","error","setError","convertFormat","setConvertFormat","convertYT","event","console","log","target","response","fetch","method","headers","mode","body","JSON","stringify","url","data","json","formatButtons","map","format","FormatButton","onClick","active","fileName","_jsxFileName","lineNumber","columnNumber","YoutubeDLContainer","children","type","FormatContainer","toString","_c","StyledFormatButton","$active","_c2","div","_c3","_c4","button","props","_c5","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    let [text, setText] = useState();\n    let [error, setError] = useState(null);\n    let [convertFormat, setConvertFormat] = useState(\"mp3\");\n\n    const convertYT = async (event)=>{\n        console.log(event.target);\n        try{\n            const response = await fetch('http://localhost:3001/test', \n            {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n    \n                mode:'cors',\n                body: JSON.stringify({\n                    url: text\n                })\n            });\n            const data = await response.json();\n        }\n        catch(error){\n            setError(error);\n        };\n        \n    }\n\n    const formatButtons = [\"mp3\", \"mp4\"].map(format=>{\n        return <FormatButton \n        onClick = {()=>{setConvertFormat(format)}}\n        format = {format}\n        key = {format}\n        active= {convertFormat == format}\n        />\n    })\n    return(\n        \n        <YoutubeDLContainer>\n            <h1>youtube dl</h1>\n            <input \n            // onChange={\n            //     (e)=>{\n            //         setText(e.target.value);\n            //     }\n            // } \n            type=\"text\" />\n            <FormatContainer>\n                {formatButtons}\n            </FormatContainer>\n            <button onClick={convertYT}>convert yt</button>\n            {error && (<p>{error.toString()}</p>)}\n        </YoutubeDLContainer>\n        \n        \n    )\n}\n\nfunction FormatButton({onClick, format, active}){\n    return (\n        <StyledFormatButton\n            $active = {active}\n            onClick = {onClick}\n        >{format}</StyledFormatButton>\n    )\n}\n\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    input {\n        \n    }\n`\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`\n\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active?\"red\":\"white\"};\n\n`\nexport default YoutubeDL;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}