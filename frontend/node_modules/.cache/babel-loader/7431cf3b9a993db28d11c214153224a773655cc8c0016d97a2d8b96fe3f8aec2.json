{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  let [text, setText] = useState();\n  let [error, setError] = useState(null);\n  const convertYT = async event => {\n    try {\n      const response = await fetch('http://localhost:3001/test', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          url: text\n        })\n      });\n      const data = await response.json();\n    } catch (error) {\n      setError(error);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setText(e.target.value);\n      },\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_s(YoutubeDL, \"V06Q3KkX8aBO+LkF7QGNDxpw+vI=\");\n_c = YoutubeDL;\nexport default YoutubeDL;\nvar _c;\n$RefreshReg$(_c, \"YoutubeDL\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","axios","require","YoutubeDL","_s","text","setText","error","setError","convertYT","event","response","fetch","method","headers","mode","body","JSON","stringify","url","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","onClick","toString","_c","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    let [text, setText] = useState();\n    let [error, setError] = useState(null);\n\n    const convertYT = async (event)=>{\n        try{\n            const response = await fetch('http://localhost:3001/test', \n            {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n    \n                mode:'cors',\n                body: JSON.stringify({\n                    url: text\n                })\n            });\n            const data = await response.json();\n        }\n        catch(error){\n            setError(error);\n        };\n        \n    }\n\n    return(\n        <>\n        <h1>youtube dl</h1>\n        <input onChange={\n            (e)=>{\n                setText(e.target.value);\n            }\n        } type=\"text\" />\n        <button onClick={convertYT}>convert yt</button>\n        {error && (<p>{error.toString()}</p>)}\n        </>\n    )\n}\n\n\nexport default YoutubeDL;"],"mappings":";;AACA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAChC,IAAI,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,SAAS,GAAG,MAAOC,KAAK,IAAG;IAC7B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EACzD;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QAEDC,IAAI,EAAC,MAAM;QACXC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,GAAG,EAAEd;QACT,CAAC;MACL,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACtC,CAAC,CACD,OAAMd,KAAK,EAAC;MACRC,QAAQ,CAACD,KAAK,CAAC;IACnB;IAAC;EAEL,CAAC;EAED,oBACIT,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACAxB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB5B,OAAA;MAAO6B,QAAQ,EACVC,CAAC,IAAG;QACDtB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAC3B,CACH;MAACC,IAAI,EAAC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChB5B,OAAA;MAAQkC,OAAO,EAAEvB,SAAU;MAAAa,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9CnB,KAAK,iBAAKT,OAAA;MAAAwB,QAAA,EAAIf,KAAK,CAAC0B,QAAQ,CAAC;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;EAAA,eACnC,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAvCYD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA0CtB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}