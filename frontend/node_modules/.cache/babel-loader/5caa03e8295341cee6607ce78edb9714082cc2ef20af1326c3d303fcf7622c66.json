{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [convertFormat, setConvertFormat] = useState(\"m4a\");\n  const textInput = useRef(null);\n  const convertYT = async () => {\n    const text = textInput.current.value;\n    try {\n      const response = await fetch('http://localhost:3001/test', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          url: text,\n          format: convertFormat\n        })\n      });\n      // const data = await response.json();\n      console.log(response);\n      if (response.ok) {\n        console.log(\"success!!!\");\n      } else {\n        // setError(data.error);\n      }\n    } catch (error) {\n      setError(error);\n    }\n    ;\n  };\n  const formatButtons = [\"m4a\", \"mp4\"].map(format => {\n    return /*#__PURE__*/_jsxDEV(FormatButton, {\n      onClick: () => {\n        setConvertFormat(format);\n      },\n      format: format,\n      active: convertFormat == format\n    }, format, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(YoutubeDLContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: textInput,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormatContainer, {\n      children: formatButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeDL, \"tO5bH/HjW0yZgNelL7WVcFTecdo=\");\n_c = YoutubeDL;\nfunction FormatButton({\n  onClick,\n  format,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledFormatButton, {\n    $active: active,\n    onClick: onClick,\n    children: format\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FormatButton;\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n_c3 = YoutubeDLContainer;\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`;\n_c4 = FormatContainer;\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active ? \"red\" : \"white\"};\n    padding: 0 1rem;\n\n`;\n_c5 = StyledFormatButton;\nexport default YoutubeDL;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"YoutubeDL\");\n$RefreshReg$(_c2, \"FormatButton\");\n$RefreshReg$(_c3, \"YoutubeDLContainer\");\n$RefreshReg$(_c4, \"FormatContainer\");\n$RefreshReg$(_c5, \"StyledFormatButton\");","map":{"version":3,"names":["useRef","useState","styled","jsxDEV","_jsxDEV","axios","require","YoutubeDL","_s","error","setError","convertFormat","setConvertFormat","textInput","convertYT","text","current","value","response","fetch","method","headers","mode","body","JSON","stringify","url","format","console","log","ok","formatButtons","map","FormatButton","onClick","active","fileName","_jsxFileName","lineNumber","columnNumber","YoutubeDLContainer","children","ref","type","FormatContainer","toString","_c","StyledFormatButton","$active","_c2","div","_c3","_c4","button","props","_c5","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    const [error, setError] = useState(null);\n    const [convertFormat, setConvertFormat] = useState(\"m4a\");\n    const textInput = useRef(null);\n\n    const convertYT = async ()=>{\n        const text = textInput.current.value;\n        try{\n            const response = await fetch('http://localhost:3001/test', \n            {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n    \n                mode:'cors',\n                body: JSON.stringify({\n                    url: text,\n                    format: convertFormat\n                })\n            });\n            // const data = await response.json();\n            console.log(response);\n            if(response.ok){\n                console.log(\"success!!!\");\n            }else{\n                // setError(data.error);\n            }\n            \n        }\n        catch(error){\n            setError(error);\n        };\n        \n    }\n\n    const formatButtons = [\"m4a\", \"mp4\"].map(format=>{\n        return <FormatButton \n        onClick = {()=>{setConvertFormat(format)}}\n        format = {format}\n        key = {format}\n        active= {convertFormat == format}\n        />\n    })\n    return(\n        \n        <YoutubeDLContainer>\n            <h1>youtube dl</h1>\n            <input ref = {textInput} type=\"text\"/>\n            <FormatContainer>\n                {formatButtons}\n            </FormatContainer>\n            <button onClick={convertYT}>convert yt</button>\n            {error && (<p>{error.toString()}</p>)}\n        </YoutubeDLContainer>\n        \n        \n    )\n}\n\nfunction FormatButton({onClick, format, active}){\n    return (\n        <StyledFormatButton\n            $active = {active}\n            onClick = {onClick}\n        >{format}</StyledFormatButton>\n    )\n}\n\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`\n\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active?\"red\":\"white\"};\n    padding: 0 1rem;\n\n`\nexport default YoutubeDL;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}