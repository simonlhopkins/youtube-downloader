{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isConverting, setIsConverting] = useState(false);\n  const [convertFormat, setConvertFormat] = useState(\"m4a\");\n  const [downloadReady, setDownloadReady] = useState(false);\n  const [thumbnailURL, setThumbnailURL] = useState(null);\n  const textInput = useRef(null);\n  const onInputChange = e => {\n    console.log(e.target.value);\n    fetch(`http://localhost:3001/thumbnail?url=${e.target.value}`).then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(json.url);\n          setThumbnailURL(json.url);\n        });\n      } else {\n        setThumbnailURL(null);\n        response.json().then(json => {\n          console.log(json.error);\n        });\n      }\n    }).catch(error => {\n      console.error(error.toString());\n      setThumbnailURL(null);\n      setError(error.toString());\n    });\n  };\n  const convertYT = async () => {\n    const text = textInput.current.value;\n    setIsConverting(true);\n    fetch('http://localhost:3001/convertYoutube', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        url: text,\n        format: convertFormat\n      })\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(json => console.log(json.message));\n        setDownloadReady(true);\n      } else {\n        response.json().then(json => {\n          setDownloadReady(false);\n          setError(json.error);\n        });\n      }\n    }).catch(error => {\n      setDownloadReady(false);\n      setError(error.toString());\n    }).finally(() => {\n      setIsConverting(false);\n    });\n  };\n  const formatButtons = [\"m4a\", \"mp4\"].map(format => {\n    return /*#__PURE__*/_jsxDEV(FormatButton, {\n      onClick: () => {\n        setConvertFormat(format);\n      },\n      format: format,\n      active: convertFormat == format\n    }, format, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  });\n  const downloadVideo = async () => {\n    fetch('http://localhost:3001/download').then(response => {\n      if (response.ok) {\n        // Extract the file name from the response headers\n        const contentDisposition = response.headers.get('content-disposition');\n        const filenameMatch = contentDisposition.match(/filename=\"(.+?)\"/);\n        const suggestedFileName = filenameMatch ? filenameMatch[1] : 'downloaded-file.txt';\n        return response.blob().then(blob => ({\n          blob,\n          suggestedFileName\n        }));\n      } else {\n        setError(\"Download request failed\");\n        throw new Error('Download request failed');\n      }\n    }).then(({\n      blob,\n      suggestedFileName\n    }) => {\n      // Create a blob URL for the downloaded file and trigger the download\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = suggestedFileName; // Set the suggested file name\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }).catch(error => {\n      // Handle the error locally without redirecting\n      console.error('Download error:', error);\n      setError(error.toString());\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(YoutubeDLContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"https://www.youtube.com/watch?v=hRFUZBXOWZI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onInputChange,\n      ref: textInput,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormatContainer, {\n      children: formatButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), thumbnailURL && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnailURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isConverting,\n      onClick: downloadVideo,\n      children: [isConverting ? \"loading...\" : \"DOWNLOAD\", \"!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 31\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeDL, \"oVY4/pVHAwbTHAalL9R9zhWLYtc=\");\n_c = YoutubeDL;\nfunction FormatButton({\n  onClick,\n  format,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledFormatButton, {\n    $active: active,\n    onClick: onClick,\n    children: format\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FormatButton;\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n_c3 = YoutubeDLContainer;\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`;\n_c4 = FormatContainer;\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active ? \"red\" : \"white\"};\n    padding: 0 1rem;\n\n`;\n_c5 = StyledFormatButton;\nexport default YoutubeDL;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"YoutubeDL\");\n$RefreshReg$(_c2, \"FormatButton\");\n$RefreshReg$(_c3, \"YoutubeDLContainer\");\n$RefreshReg$(_c4, \"FormatContainer\");\n$RefreshReg$(_c5, \"StyledFormatButton\");","map":{"version":3,"names":["useRef","useState","styled","jsxDEV","_jsxDEV","axios","require","YoutubeDL","_s","error","setError","isConverting","setIsConverting","convertFormat","setConvertFormat","downloadReady","setDownloadReady","thumbnailURL","setThumbnailURL","textInput","onInputChange","e","console","log","target","value","fetch","then","response","ok","json","url","catch","toString","convertYT","text","current","method","headers","mode","body","JSON","stringify","format","message","finally","formatButtons","map","FormatButton","onClick","active","fileName","_jsxFileName","lineNumber","columnNumber","downloadVideo","contentDisposition","get","filenameMatch","match","suggestedFileName","blob","Error","window","URL","createObjectURL","a","document","createElement","href","download","style","display","appendChild","click","revokeObjectURL","YoutubeDLContainer","children","onChange","ref","type","FormatContainer","src","disabled","_c","StyledFormatButton","$active","_c2","div","_c3","_c4","button","props","_c5","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    const [error, setError] = useState(null);\n    const [isConverting, setIsConverting] = useState(false);\n    const [convertFormat, setConvertFormat] = useState(\"m4a\");\n    const [downloadReady, setDownloadReady] = useState(false);\n    const [thumbnailURL, setThumbnailURL] = useState(null);\n    const textInput = useRef(null);\n    \n    const onInputChange = (e)=>{\n        console.log(e.target.value);\n        fetch(`http://localhost:3001/thumbnail?url=${e.target.value}`)\n        .then(response=>{\n            if(response.ok){\n                response.json().then(json=>{\n                    console.log(json.url);\n                    setThumbnailURL(json.url);\n                })\n            }else{\n                setThumbnailURL(null);\n                response.json().then(json=>{\n                    console.log(json.error)\n                });\n            }\n        }).catch((error)=>{\n            console.error(error.toString());\n            setThumbnailURL(null);\n            setError(error.toString());\n        })\n    }\n\n    const convertYT = async ()=>{\n        const text = textInput.current.value;\n        setIsConverting(true);\n        fetch('http://localhost:3001/convertYoutube', \n        {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n\n            mode:'cors',\n            body: JSON.stringify({\n                url: text,\n                format: convertFormat\n            })\n        })\n        .then(response => {\n            if(response.ok){\n                response.json().then(json=>console.log(json.message));\n                setDownloadReady(true);\n            }else{\n                response.json().then(json=>{\n                    setDownloadReady(false);\n                    setError(json.error);\n                });\n            }\n        })\n        .catch(error=>{\n            setDownloadReady(false);\n            setError(error.toString());\n        }).finally(()=>{\n            setIsConverting(false);\n        })\n        \n            \n        \n        \n        \n    }\n\n    const formatButtons = [\"m4a\", \"mp4\"].map(format=>{\n        return <FormatButton \n        onClick = {()=>{setConvertFormat(format)}}\n        format = {format}\n        key = {format}\n        active= {convertFormat == format}\n        />\n    })\n    const downloadVideo = async ()=>{\n\n        fetch('http://localhost:3001/download')\n        .then((response) => {\n            if (response.ok) {\n                // Extract the file name from the response headers\n                const contentDisposition = response.headers.get('content-disposition');\n                const filenameMatch = contentDisposition.match(/filename=\"(.+?)\"/);\n                const suggestedFileName = filenameMatch ? filenameMatch[1] : 'downloaded-file.txt';\n\n                return response.blob().then(blob => ({ blob, suggestedFileName }));\n            } else {\n                setError(\"Download request failed\");\n                throw new Error('Download request failed');\n            }\n        })\n        .then(({ blob, suggestedFileName }) => {\n            // Create a blob URL for the downloaded file and trigger the download\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = suggestedFileName; // Set the suggested file name\n            a.style.display = 'none';\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n          })\n          .catch((error) => {\n            // Handle the error locally without redirecting\n            console.error('Download error:', error);\n            setError(error.toString());\n          });\n    }\n    return(\n        \n        <YoutubeDLContainer>\n            <h1>youtube dl</h1>\n            <p>https://www.youtube.com/watch?v=hRFUZBXOWZI</p>\n            <input onChange = {onInputChange} ref = {textInput} type=\"text\"/>\n            <FormatContainer>\n                {formatButtons}\n            </FormatContainer>\n            {thumbnailURL && <img src = {thumbnailURL}></img>}\n            <button onClick={convertYT}>convert yt</button>\n            {downloadReady && <button disabled={isConverting} onClick={downloadVideo}>{isConverting?\"loading...\":\"DOWNLOAD\"}!!</button>}\n            {error && (<p>{error.toString()}</p>)}\n        </YoutubeDLContainer>\n        \n        \n    )\n}\n\nfunction FormatButton({onClick, format, active}){\n    return (\n        <StyledFormatButton\n            $active = {active}\n            onClick = {onClick}\n        >{format}</StyledFormatButton>\n    )\n}\n\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`\n\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active?\"red\":\"white\"};\n    padding: 0 1rem;\n\n`\nexport default YoutubeDL;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}