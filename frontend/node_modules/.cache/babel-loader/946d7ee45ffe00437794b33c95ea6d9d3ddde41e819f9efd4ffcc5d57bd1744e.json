{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/StatusBar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusBar() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    // Set up an interval to update the time every second\n    const intervalID = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalID);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StatusBarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: time.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-chart-simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LTE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"battery fa-solid fa-battery-empty\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(StatusBar, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = StatusBar;\nconst StatusBarContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    gap: 0.42rem;\n    opacity: 1;\n    z-index: 100;\n    color: black;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    \n`;\n_c2 = StatusBarContainer;\nexport default StatusBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatusBar\");\n$RefreshReg$(_c2, \"StatusBarContainer\");","map":{"version":3,"names":["useEffect","useState","styled","jsxDEV","_jsxDEV","StatusBar","_s","time","setTime","Date","intervalID","setInterval","clearInterval","StatusBarContainer","children","toLocaleTimeString","hour","minute","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","div","_c2","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/StatusBar.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction StatusBar(){\n    const [time, setTime] = useState(new Date());\n\n    useEffect(() => {\n        // Set up an interval to update the time every second\n        const intervalID = setInterval(() => {\n        setTime(new Date());\n        }, 1000);\n\n        // Clean up the interval when the component unmounts\n        return () => clearInterval(intervalID);\n    }, []);\n\n    return (\n        <StatusBarContainer>\n        <p>{time.toLocaleTimeString('en-US', {hour: 'numeric',minute: '2-digit'})}</p>\n        <div>\n            <i class=\"fa-solid fa-chart-simple\"></i>\n            <p>LTE</p>\n            <i class=\"battery fa-solid fa-battery-empty\">\n                <div></div>\n            </i>\n        </div>\n    </StatusBarContainer>\n    )\n}\n\n\nconst StatusBarContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    gap: 0.42rem;\n    opacity: 1;\n    z-index: 100;\n    color: black;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    \n`\n\nexport default StatusBar;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAE5CT,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,UAAU,GAAGC,WAAW,CAAC,MAAM;MACrCH,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACS,kBAAkB;IAAAC,QAAA,gBACnBV,OAAA;MAAAU,QAAA,EAAIP,IAAI,CAACQ,kBAAkB,CAAC,OAAO,EAAE;QAACC,IAAI,EAAE,SAAS;QAACC,MAAM,EAAE;MAAS,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9EjB,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAGkB,KAAK,EAAC;MAA0B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCjB,OAAA;QAAAU,QAAA,EAAG;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACVjB,OAAA;QAAGkB,KAAK,EAAC,mCAAmC;QAAAR,QAAA,eACxCV,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEzB;AAACf,EAAA,CAzBQD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AA4BlB,MAAMQ,kBAAkB,GAAGX,MAAM,CAACsB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAVKZ,kBAAkB;AAYxB,eAAeR,SAAS;AAAC,IAAAkB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}