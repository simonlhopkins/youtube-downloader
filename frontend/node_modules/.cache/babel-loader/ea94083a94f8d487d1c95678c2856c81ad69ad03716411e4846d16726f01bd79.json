{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [convertFormat, setConvertFormat] = useState(\"m4a\");\n  const [downloadReady, setDownloadReady] = useState(false);\n  const textInput = useRef(null);\n  const convertYT = async () => {\n    const text = textInput.current.value;\n    try {\n      const response = await fetch('http://localhost:3001/convertYoutube', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          url: text,\n          format: convertFormat\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"success!!!\");\n        setDownloadReady(true);\n      } else {\n        console.log(error);\n        setError(data.error);\n      }\n    } catch (error) {\n      setError(error);\n    }\n    ;\n  };\n  const formatButtons = [\"m4a\", \"mp4\"].map(format => {\n    return /*#__PURE__*/_jsxDEV(FormatButton, {\n      onClick: () => {\n        setConvertFormat(format);\n      },\n      format: format,\n      active: convertFormat == format\n    }, format, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  });\n  const downloadVideo = async () => {\n    // window.location.href = (\"http://localhost:3001/download\");\n    fetch('http://localhost:3001/download').then(response => {\n      if (response.ok) {\n        return response.blob();\n      } else {\n        throw new Error('Download request failed');\n      }\n    }).then(blob => {\n      // Create a blob URL for the downloaded file and trigger the download\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'downloaded-file.txt';\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }).catch(error => {\n      // Handle the error locally without redirecting\n      console.error('Download error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(YoutubeDLContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"https://www.youtube.com/watch?v=hRFUZBXOWZI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: textInput,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormatContainer, {\n      children: formatButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }, this), downloadReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadVideo,\n      children: [\"DOWNLOAD!! \", convertFormat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeDL, \"trlZxWEE8n8HlkpsdMp0GufrYNM=\");\n_c = YoutubeDL;\nfunction FormatButton({\n  onClick,\n  format,\n  active\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledFormatButton, {\n    $active: active,\n    onClick: onClick,\n    children: format\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_c2 = FormatButton;\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n_c3 = YoutubeDLContainer;\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`;\n_c4 = FormatContainer;\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active ? \"red\" : \"white\"};\n    padding: 0 1rem;\n\n`;\n_c5 = StyledFormatButton;\nexport default YoutubeDL;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"YoutubeDL\");\n$RefreshReg$(_c2, \"FormatButton\");\n$RefreshReg$(_c3, \"YoutubeDLContainer\");\n$RefreshReg$(_c4, \"FormatContainer\");\n$RefreshReg$(_c5, \"StyledFormatButton\");","map":{"version":3,"names":["useRef","useState","styled","jsxDEV","_jsxDEV","axios","require","YoutubeDL","_s","error","setError","convertFormat","setConvertFormat","downloadReady","setDownloadReady","textInput","convertYT","text","current","value","response","fetch","method","headers","mode","body","JSON","stringify","url","format","data","json","ok","console","log","formatButtons","map","FormatButton","onClick","active","fileName","_jsxFileName","lineNumber","columnNumber","downloadVideo","then","blob","Error","window","URL","createObjectURL","a","document","createElement","href","download","style","display","appendChild","click","revokeObjectURL","catch","YoutubeDLContainer","children","ref","type","FormatContainer","toString","_c","StyledFormatButton","$active","_c2","div","_c3","_c4","button","props","_c5","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    const [error, setError] = useState(null);\n    const [convertFormat, setConvertFormat] = useState(\"m4a\");\n    const [downloadReady, setDownloadReady] = useState(false);\n    const textInput = useRef(null);\n\n    const convertYT = async ()=>{\n        const text = textInput.current.value;\n        try{\n            const response = await fetch('http://localhost:3001/convertYoutube', \n            {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n    \n                mode:'cors',\n                body: JSON.stringify({\n                    url: text,\n                    format: convertFormat\n                })\n            });\n            const data = await response.json();\n            if(response.ok){\n                console.log(\"success!!!\");\n                setDownloadReady(true);\n            }else{\n                console.log(error);\n\n                setError(data.error);\n            }\n            \n        }\n        catch(error){\n            setError(error);\n        };\n        \n    }\n\n    const formatButtons = [\"m4a\", \"mp4\"].map(format=>{\n        return <FormatButton \n        onClick = {()=>{setConvertFormat(format)}}\n        format = {format}\n        key = {format}\n        active= {convertFormat == format}\n        />\n    })\n    const downloadVideo = async ()=>{\n\n        // window.location.href = (\"http://localhost:3001/download\");\n        fetch('http://localhost:3001/download')\n      .then((response) => {\n        if (response.ok) {\n          return response.blob();\n        } else {\n          throw new Error('Download request failed');\n        }\n      })\n      .then((blob) => {\n        // Create a blob URL for the downloaded file and trigger the download\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'downloaded-file.txt';\n        a.style.display = 'none';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n      })\n      .catch((error) => {\n        // Handle the error locally without redirecting\n        console.error('Download error:', error);\n      });\n    }\n    return(\n        \n        <YoutubeDLContainer>\n            <h1>youtube dl</h1>\n            <p>https://www.youtube.com/watch?v=hRFUZBXOWZI</p>\n            <input ref = {textInput} type=\"text\"/>\n            <FormatContainer>\n                {formatButtons}\n            </FormatContainer>\n            <button onClick={convertYT}>convert yt</button>\n            {error && (<p>{error.toString()}</p>)}\n            {downloadReady && <button onClick={downloadVideo}>DOWNLOAD!! {convertFormat}</button>}\n        </YoutubeDLContainer>\n        \n        \n    )\n}\n\nfunction FormatButton({onClick, format, active}){\n    return (\n        <StyledFormatButton\n            $active = {active}\n            onClick = {onClick}\n        >{format}</StyledFormatButton>\n    )\n}\n\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n\n`\n\nconst StyledFormatButton = styled.button`\n    background-color: ${props => props.$active?\"red\":\"white\"};\n    padding: 0 1rem;\n\n`\nexport default YoutubeDL;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}