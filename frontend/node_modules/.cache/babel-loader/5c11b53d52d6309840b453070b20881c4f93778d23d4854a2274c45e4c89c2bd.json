{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nexport const YoutubeDL = () => {\n  _s();\n  let [text, setText] = useState();\n  let [error, setError] = useState(null);\n  let [convertFormat, setConvertFormat] = useState(\"mp3\");\n  const convertYT = async event => {\n    try {\n      const response = await fetch('http://localhost:3001/test', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors',\n        body: JSON.stringify({\n          url: text\n        })\n      });\n      const data = await response.json();\n    } catch (error) {\n      setError(error);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(YoutubeDLContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"youtube dl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setText(e.target.value);\n      },\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        $format: \"mp3\",\n        $active: convertFormat == $format,\n        children: \"mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        $format: \"mp4\",\n        $active: convertFormat == $format,\n        children: \"mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertYT,\n      children: \"convert yt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeDL, \"G5JdtGcwjqTWaTk7fWZqf/SQ3Lc=\");\n_c = YoutubeDL;\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    input {\n        \n    }\n`;\n_c2 = YoutubeDLContainer;\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n    button{\n        background-color: ${props => props.$active ? \"red\" : \"white\"};\n    }\n`;\n_c3 = FormatContainer;\nexport default YoutubeDL;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"YoutubeDL\");\n$RefreshReg$(_c2, \"YoutubeDLContainer\");\n$RefreshReg$(_c3, \"FormatContainer\");","map":{"version":3,"names":["useRef","useState","styled","jsxDEV","_jsxDEV","axios","require","YoutubeDL","_s","text","setText","error","setError","convertFormat","setConvertFormat","convertYT","event","response","fetch","method","headers","mode","body","JSON","stringify","url","data","json","YoutubeDLContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","FormatContainer","$format","$active","onClick","toString","_c","div","_c2","props","_c3","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/frontend/src/Components/YoutubeDL.jsx"],"sourcesContent":["\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst axios = require('axios');\n\nexport const YoutubeDL = () => {\n\n    let [text, setText] = useState();\n    let [error, setError] = useState(null);\n    let [convertFormat, setConvertFormat] = useState(\"mp3\");\n\n    const convertYT = async (event)=>{\n        try{\n            const response = await fetch('http://localhost:3001/test', \n            {\n                method: 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n    \n                mode:'cors',\n                body: JSON.stringify({\n                    url: text\n                })\n            });\n            const data = await response.json();\n        }\n        catch(error){\n            setError(error);\n        };\n        \n    }\n\n    return(\n        \n        <YoutubeDLContainer>\n            <h1>youtube dl</h1>\n            <input onChange={\n                (e)=>{\n                    setText(e.target.value);\n                }\n            } type=\"text\" />\n            <FormatContainer>\n                <button \n                $format = \"mp3\"\n                $active = {convertFormat==$format}\n                >mp3</button>\n                <button\n                $format = \"mp4\"\n                $active = {convertFormat==$format}\n                >mp4</button>\n            </FormatContainer>\n            <button onClick={convertYT}>convert yt</button>\n            {error && (<p>{error.toString()}</p>)}\n        </YoutubeDLContainer>\n        \n        \n    )\n}\n\nconst YoutubeDLContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    input {\n        \n    }\n`\nconst FormatContainer = styled.div`\n    \n    display: flex;\n    justify-content: center;\n    button{\n        background-color: ${props => props.$active?\"red\":\"white\"};\n    }\n`\nexport default YoutubeDL;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}