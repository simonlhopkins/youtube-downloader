{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/StatusBar.js\",\n  _s = $RefreshSig$();\nimport { BarChart, Battery } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetFormattedTime() {\n  return {\n    time: new Date().toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit'\n    })\n  };\n}\n_c = GetFormattedTime;\nfunction StatusBar() {\n  _s();\n  const [time, setTime] = useState(GetFormattedTime());\n  useEffect(() => {\n    // Set up an interval to update the time every second\n    const intervalID = setInterval(() => {\n      setTime(GetFormattedTime());\n    }, 1000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalID);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StatusBarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: time.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RightSideContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"LTE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Battery, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(StatusBar, \"6cPvMfVDjb1cbx0aPMFGST0fD78=\");\n_c2 = StatusBar;\nconst StatusBarContainer = styled.div`\n    display: flex;\n    max-width: 100%;\n    justify-content: space-between;\n    gap: 0.42rem;\n    opacity: 1;\n    z-index: 100;\n    color: black;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    margin-left: 3.9rem;\n    margin-right: 2.64rem;\n    box-sizing: padding-box;\n    \n`;\n_c3 = StatusBarContainer;\nconst RightSideContainer = styled.div`\n    display: flex;\n    align-items: center;\n    gap: inherit;\n`;\n_c4 = RightSideContainer;\nexport default StatusBar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetFormattedTime\");\n$RefreshReg$(_c2, \"StatusBar\");\n$RefreshReg$(_c3, \"StatusBarContainer\");\n$RefreshReg$(_c4, \"RightSideContainer\");","map":{"version":3,"names":["BarChart","Battery","useEffect","useState","styled","jsxDEV","_jsxDEV","GetFormattedTime","time","Date","toLocaleTimeString","hour","minute","_c","StatusBar","_s","setTime","intervalID","setInterval","clearInterval","StatusBarContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","RightSideContainer","_c2","div","_c3","_c4","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/StatusBar.js"],"sourcesContent":["import { BarChart, Battery } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction GetFormattedTime(){\n    return {time: new Date().toLocaleTimeString('en-US', {hour: 'numeric',minute: '2-digit'})}\n}\nfunction StatusBar(){\n    const [time, setTime] = useState(GetFormattedTime());\n\n    useEffect(() => {\n        // Set up an interval to update the time every second\n        const intervalID = setInterval(() => {\n            setTime(GetFormattedTime());\n        }, 1000);\n\n        // Clean up the interval when the component unmounts\n        return () => clearInterval(intervalID);\n    }, []);\n\n    return (\n        <StatusBarContainer>\n        <p>{time.time}</p>\n        <RightSideContainer>\n            <BarChart/>\n            <p>LTE</p>\n            <Battery/>\n        </RightSideContainer>\n    </StatusBarContainer>\n    )\n}\n\n\nconst StatusBarContainer = styled.div`\n    display: flex;\n    max-width: 100%;\n    justify-content: space-between;\n    gap: 0.42rem;\n    opacity: 1;\n    z-index: 100;\n    color: black;\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    margin-left: 3.9rem;\n    margin-right: 2.64rem;\n    box-sizing: padding-box;\n    \n`\n\nconst RightSideContainer = styled.div`\n    display: flex;\n    align-items: center;\n    gap: inherit;\n`\n\nexport default StatusBar;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,cAAc;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,gBAAgBA,CAAA,EAAE;EACvB,OAAO;IAACC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MAACC,IAAI,EAAE,SAAS;MAACC,MAAM,EAAE;IAAS,CAAC;EAAC,CAAC;AAC9F;AAACC,EAAA,GAFQN,gBAAgB;AAGzB,SAASO,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACP,IAAI,EAAEQ,OAAO,CAAC,GAAGb,QAAQ,CAACI,gBAAgB,CAAC,CAAC,CAAC;EAEpDL,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCF,OAAO,CAACT,gBAAgB,CAAC,CAAC,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMY,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACc,kBAAkB;IAAAC,QAAA,gBACnBf,OAAA;MAAAe,QAAA,EAAIb,IAAI,CAACA;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA,CAACoB,kBAAkB;MAAAL,QAAA,gBACff,OAAA,CAACN,QAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACXnB,OAAA;QAAAe,QAAA,EAAG;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACVnB,OAAA,CAACL,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEzB;AAACV,EAAA,CAvBQD,SAAS;AAAAa,GAAA,GAATb,SAAS;AA0BlB,MAAMM,kBAAkB,GAAGhB,MAAM,CAACwB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GAbKT,kBAAkB;AAexB,MAAMM,kBAAkB,GAAGtB,MAAM,CAACwB,GAAI;AACtC;AACA;AACA;AACA,CAAC;AAAAE,GAAA,GAJKJ,kBAAkB;AAMxB,eAAeZ,SAAS;AAAC,IAAAD,EAAA,EAAAc,GAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}