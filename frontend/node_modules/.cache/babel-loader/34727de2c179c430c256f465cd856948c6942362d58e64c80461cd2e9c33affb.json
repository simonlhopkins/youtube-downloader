{"ast":null,"code":"var _jsxFileName = \"/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/PlaylistContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaylistContainer() {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  async function getAccessToken() {\n    if (localStorage.getItem(\"spotify-access-token\")) {\n      const access_token_data = JSON.parse(localStorage.getItem(\"spotify-access-token\"));\n      const currentTime = new Date();\n      const expirationTime = new Date(access_token_data.expirationTime);\n      if (expirationTime > currentTime) {\n        console.log(`there is :${expirationTime - currentTime} time before new access token`);\n        const accessTokenData = JSON.parse(localStorage.getItem(\"spotify-access-token\"));\n        accessTokenData.isNew = false;\n        return accessTokenData;\n      } else {\n        console.log(\"access token expired\");\n      }\n    }\n    console.log(\"getting access token\");\n    const client_id = '1b352e5ba35049b1918e0b310494107e';\n    const client_secret = 'b79d65aa4cca4e389c38ad01497bb981';\n    const data = new URLSearchParams();\n    data.append(\"grant_type\", \"client_credentials\");\n    data.append(\"client_id\", client_id);\n    data.append(\"client_secret\", client_secret);\n    return fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: data\n    }).then(response => response.json()).then(data => {\n      console.log(\"setting access token\");\n      const expirationTime = new Date(new Date().getTime() + 3600 * 1000);\n      const accessTokenData = {\n        token: data.access_token,\n        expirationTime: expirationTime\n      };\n      localStorage.setItem(\"spotify-access-token\", JSON.stringify(accessTokenData));\n      accessTokenData.isNew = true;\n      return accessTokenData;\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }\n  getAccessToken.then(result => {\n    console.log(result);\n  });\n  useEffect(() => {\n    console.log(\"mount\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(PlaylistContainer, \"/slGXhel7+C8h4d0urFIRGxsDH8=\");\n_c = PlaylistContainer;\nexport default PlaylistContainer;\nvar _c;\n$RefreshReg$(_c, \"PlaylistContainer\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","PlaylistContainer","_s","accessToken","setAccessToken","getAccessToken","localStorage","getItem","access_token_data","JSON","parse","currentTime","Date","expirationTime","console","log","accessTokenData","isNew","client_id","client_secret","data","URLSearchParams","append","fetch","method","headers","body","then","response","json","getTime","token","access_token","setItem","stringify","catch","error","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/simonhopkins/Desktop/Personal/react/music-i-listen-to/src/PlaylistContainer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nfunction PlaylistContainer(){\n    const [accessToken, setAccessToken] = useState('');\n\n    async function getAccessToken() {\n        if (localStorage.getItem(\"spotify-access-token\")) {\n          const access_token_data = JSON.parse(localStorage.getItem(\"spotify-access-token\"));\n          const currentTime = new Date();\n          const expirationTime = new Date(access_token_data.expirationTime);\n          if (expirationTime > currentTime) {\n            console.log(`there is :${expirationTime - currentTime} time before new access token`);\n            const accessTokenData = JSON.parse(localStorage.getItem(\"spotify-access-token\"));\n            accessTokenData.isNew = false;\n            return accessTokenData;\n          } else {\n            console.log(\"access token expired\");\n          }\n        }\n        console.log(\"getting access token\");\n        const client_id = '1b352e5ba35049b1918e0b310494107e';\n        const client_secret = 'b79d65aa4cca4e389c38ad01497bb981';\n      \n        const data = new URLSearchParams();\n        data.append(\"grant_type\", \"client_credentials\");\n        data.append(\"client_id\", client_id);\n        data.append(\"client_secret\", client_secret);\n        return fetch(\"https://accounts.spotify.com/api/token\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: data\n      \n        }).then(response => response.json())\n          .then(data => {\n            console.log(\"setting access token\");\n            const expirationTime = new Date(new Date().getTime() + 3600 * 1000);\n            const accessTokenData = {\n              token: data.access_token,\n              expirationTime: expirationTime\n            }\n            localStorage.setItem(\"spotify-access-token\", JSON.stringify(accessTokenData));\n            accessTokenData.isNew = true;\n            return accessTokenData;\n      \n          }).catch(error => {\n            console.log(\"error\", error);\n          });\n      \n    }\n\n    getAccessToken.then((result)=>{\n        console.log(result);\n    });\n\n\n    useEffect(()=>{\n        console.log(\"mount\");\n    }, [])\n\n    return(\n        <div>\n            container\n        </div>\n    )\n}\n\nexport default PlaylistContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}